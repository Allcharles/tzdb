{
  "name": "@vvo/tzdb",
  "version": "0.0.0-development",
  "description": "Automatically updated npm package of all IANA time zones and major cities",
  "repository": {
    "type": "git",
    "url": "https://github.com/vvo/tzdb.git"
  },
  "license": "MIT",
  "author": "Vincent Voyer <vincent@codeagain.com>",
  "files": [
    "cities.json",
    "time-zones.json",
    "LICENSE"
  ],
  "scripts": {
    "build": "babel-node index",
    "format": "prettier --write '**/*.*' && eslint . --fix",
    "lint": "prettier --check '**/*.*' && eslint .",
    "test": "yarn lint"
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": "12"
          }
        }
      ]
    ]
  },
  "prettier": {
    "trailingComma": "all"
  },
  "eslintConfig": {
    "env": {
      "es6": true,
      "node": true
    },
    "parser": "babel-eslint",
    "parserOptions": {
      "ecmaVersion": 2019,
      "sourceType": "module"
    },
    "extends": [
      "eslint:recommended",
      "plugin:import/recommended"
    ],
    "rules": {
      "arrow-body-style": [
        "error",
        "always"
      ],
      "curly": "error",
      "import/order": [
        "error",
        {
          "newlines-between": "always"
        }
      ]
    }
  },
  "devDependencies": {
    "@babel/core": "7.10.2",
    "@babel/node": "7.10.1",
    "@babel/preset-env": "7.10.2",
    "algoliasearch": "4.3.0",
    "babel-eslint": "10.1.0",
    "csv-parse": "4.10.1",
    "dotenv": "8.2.0",
    "eslint": "7.2.0",
    "eslint-plugin-import": "2.21.2",
    "got": "11.3.0",
    "lodash": "4.17.15",
    "luxon": "1.24.1",
    "p-each-series": "2.1.0",
    "prettier": "2.0.5",
    "prettier-plugin-packagejson": "2.2.5",
    "semantic-release": "17.0.8",
    "semantic-release-cli": "5.3.1",
    "unzipper": "0.10.11"
  },
  "publishConfig": {
    "access": "public"
  },
  "renovate": {
    "extends": [
      "config:js-lib",
      ":automergePatch",
      ":automergeBranch",
      ":automergePatch",
      ":automergeBranch",
      ":automergeLinters",
      ":automergeTesters",
      ":automergeTypes"
    ]
  }
}
